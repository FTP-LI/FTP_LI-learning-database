C51 COMPILER V9.59.0.0   MAIN                                                              01/06/2024 01:28:21 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware;.\System;.\
                    -User;C:\Keil_v5\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "intrins.h"
   3          #include "Delay.h"
   4          #include "TM1637.h"
   5          
   6          sbit BY=P0^1;
   7          sbit KEY1=P0^0;
   8          
   9          #define CMD_IDLE 0                  //空闲模式
  10          #define CMD_READ 1                  //IAP字节读命令
  11          #define CMD_PROGRAM 2               //IAP字节编程命令
  12          #define CMD_ERASE 3                 //IAP扇区擦除命令
  13          #define ENABLE_IAP 0x82             //ifSYSCLK<12MHZ
  14          #define KEY1_PRESS      1
  15          #define KEY_NOPRESS     0
  16          #define BY_PRESS        1
  17          #define BY_NOPRESS      0
  18          
  19          uint8_t D1,D2,S1,S2,S3,S4;
  20          
  21          void IapIdle(void)//关闭IAP
  22          
  23          {
  24   1             IAP_CONTR= 0;                            
  25   1             IAP_CMD= 0;                              
  26   1             IAP_TRIG= 0;                             
  27   1             IAP_ADDRH= 0x80;                         
  28   1             IAP_ADDRL= 0;
  29   1      }
  30          
  31          uint8_t IapReadByte(uint16_t addr)//从ISP/IAP/EEPROM区域读取一个字节
  32          
  33          {
  34   1             uint8_t dat;                             
  35   1             IAP_CONTR= ENABLE_IAP;                   
  36   1             IAP_CMD= CMD_READ;                       
  37   1             IAP_TRIG= 0xa5;                          
  38   1             IAP_ADDRL= addr;                         
  39   1             IAP_ADDRH= addr >> 8;                    
  40   1             IAP_TRIG= 0x5a;                          
  41   1             _nop_();                                 
  42   1             dat= IAP_DATA;                           
  43   1             IapIdle();                               
  44   1             return dat;                              
  45   1      }
  46          
  47          void IapProgramByte(uint16_t addr, uint8_t dat)//写一个字节到EEPROM区域
  48          
  49          {
  50   1      
  51   1             IAP_CONTR= ENABLE_IAP;
  52   1             IAP_CMD= CMD_PROGRAM;
  53   1             IAP_ADDRL= addr;
  54   1             IAP_ADDRH= addr >> 8;
C51 COMPILER V9.59.0.0   MAIN                                                              01/06/2024 01:28:21 PAGE 2   

  55   1             IAP_DATA= dat;
  56   1             IAP_TRIG= 0x5a;
  57   1             IAP_TRIG= 0xa5;
  58   1             _nop_();
  59   1             IapIdle();
  60   1      }
  61          
  62          void IapEraseSector(uint16_t addr)//扇区擦除
  63          
  64          {
  65   1             IAP_CONTR= ENABLE_IAP;
  66   1             IAP_CMD= CMD_ERASE;
  67   1             IAP_ADDRL= addr;
  68   1             IAP_ADDRH= addr >> 8;
  69   1             IAP_TRIG= 0x5a;
  70   1             IAP_TRIG= 0xa5;
  71   1             _nop_();
  72   1             IapIdle();
  73   1      }
  74          
  75          
  76          uint8_t KEY(void)//按键检测
  77          {
  78   1          if(KEY1==0)
  79   1          {
  80   2              delay_ms(15);
  81   2              if(KEY1==0)
  82   2              {
  83   3                  return KEY1_PRESS;
  84   3              }
  85   2          }
  86   1          return KEY_NOPRESS;
  87   1      }
  88          
  89          uint8_t BYS(void)//步数检测
  90          {
  91   1          if(BY==0)
  92   1          {
  93   2              delay_ms(20);
  94   2              if(BY==0)
  95   2              {
  96   3                  return BY_PRESS;
  97   3              }
  98   2          }
  99   1          return BY_NOPRESS;
 100   1      }
 101          
 102          
 103          void main()
 104          {
 105   1          D2 =IapReadByte(0x200);//从ROM中获取数据,步数高位
 106   1          S1 = D2/1000;//数码管第一位
 107   1          S2 = (D2/100)%10;
 108   1          S3 = (D2/10)%10;
 109   1          S4 = D2%10;//数码管第四位
 110   1          TM1637_Display(S1,S2,S3,S4,0);//断电显示
 111   1          while(1)
 112   1          {
 113   2              if(KEY()==1)//当按键按下后复位
 114   2              {
 115   3                  D1=0;
 116   3                  IapEraseSector(0x200);
C51 COMPILER V9.59.0.0   MAIN                                                              01/06/2024 01:28:21 PAGE 3   

 117   3                  IapProgramByte(0x200,D1);
 118   3              }
 119   2              if(BYS()==1)//步数累计
 120   2              {
 121   3                  D1++;
 122   3                  IapEraseSector(0x200);
 123   3                  IapProgramByte(0x200,D1);
 124   3              }
 125   2                  D2 =IapReadByte(0x200);//从ROM中获取数据,步数高位
 126   2                  S1 = D2/1000;//数码管第一位
 127   2                  S2 = (D2/100)%10;
 128   2                  S3 = (D2/10)%10;
 129   2                  S4 = D2%10;//数码管第四位
 130   2                  TM1637_Display(S1,S2,S3,S4,0);//刷新显示
 131   2          }
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    343    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
