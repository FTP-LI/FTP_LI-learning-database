C51 COMPILER V9.59.0.0   E2ROM                                                             01/03/2024 20:28:39 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE E2ROM
OBJECT MODULE PLACED IN .\Objects\E2ROM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\E2ROM.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware;.\Syst
                    -em;.\User;C:\Keil_v5\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\E2ROM.lst) OBJECT(.\Objects\E2ROM.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "intrins.h"
   3          #include "E2ROM.h"
   4          
   5          #define CMD_IDLE 0                  //空闲模式
   6          #define CMD_READ 1                  //IAP字节读命令
   7          #define CMD_PROGRAM 2               //IAP字节编程命令
   8          #define CMD_ERASE 3                 //IAP扇区擦除命令
   9          #define ENABLE_IAP 0x82             //ifSYSCLK<12MHZ
  10          #define IAP_ADDRESS 0x0000
  11          #define Part_1 0x0000
  12          #define Part_2 0x0200
  13          #define Part_3 0x600
  14          
  15          //可用扇区地址 0x0000 0x0200 0x600 这里列举三个
  16          
  17          
  18          
  19          void IapIdle(void)//关闭IAP
  20          
  21          {
  22   1             IAP_CONTR= 0;                            //关闭IAP功能
  23   1             IAP_CMD= 0;                              //清除指令待机
  24   1             IAP_TRIG= 0;                             //清空触发器寄存器
  25   1             IAP_ADDRH= 0x80;                         //将地址设置到非IAP区域
  26   1             IAP_ADDRL= 0;
  27   1      }
  28          
  29          uint8_t IapReadByte(uint16_t addr)//从ISP/IAP/EEPROM区域读取一个字节
  30          
  31          {
  32   1             uint8_t dat;                             //数据缓冲区
  33   1             IAP_CONTR= ENABLE_IAP;                   //使能IAP
  34   1             IAP_CMD= CMD_READ;                       //写触发命令（0x5a）
  35   1             IAP_TRIG= 0xa5;                          //设置读取命令
  36   1             IAP_ADDRL= addr;                         //设置IAP低八位地址
  37   1             IAP_ADDRH= addr >> 8;                    //设置IAP高八位地址  
  38   1             IAP_TRIG= 0x5a;                          //写触发命令（0xa5）
  39   1             _nop_();                                 //等待ISP/IAP/EEPROM操作完成   
  40   1             dat= IAP_DATA;                           //读ISP/IAP/EEPROM数据
  41   1             IapIdle();                               //关闭IAP功能
  42   1             return dat;                              //返回
  43   1      
  44   1      }
  45          
  46          void IapProgramByte(uint16_t addr, uint8_t dat)//写一个字节到ISP/IAP/EEPROM区域
  47          
  48          {
  49   1      
  50   1             IAP_CONTR= ENABLE_IAP;
  51   1             IAP_CMD= CMD_PROGRAM;
  52   1             IAP_ADDRL= addr;
  53   1             IAP_ADDRH= addr >> 8;
  54   1             IAP_DATA= dat;
C51 COMPILER V9.59.0.0   E2ROM                                                             01/03/2024 20:28:39 PAGE 2   

  55   1             IAP_TRIG= 0x5a;
  56   1             IAP_TRIG= 0xa5;
  57   1             _nop_();
  58   1             IapIdle();
  59   1      }
  60          
  61          void IapEraseSector(uint16_t addr)//扇区擦除
  62          
  63          {
  64   1             IAP_CONTR= ENABLE_IAP;
  65   1             IAP_CMD= CMD_ERASE;
  66   1             IAP_ADDRL= addr;
  67   1             IAP_ADDRH= addr >> 8;
  68   1             IAP_TRIG= 0x5a;
  69   1             IAP_TRIG= 0xa5;
  70   1             _nop_();
  71   1             IapIdle();
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     82    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
