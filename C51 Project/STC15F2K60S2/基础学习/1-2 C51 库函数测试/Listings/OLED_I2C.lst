C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE OLED_I2C
OBJECT MODULE PLACED IN .\Objects\OLED_I2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\OLED_I2C.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware;.\System;
                    -.\User;.\PARK) DEBUG OBJECTEXTEND PRINT(.\Listings\OLED_I2C.lst) OBJECT(.\Objects\OLED_I2C.obj)

line level    source

   1          /************************************************************************************
   2          //£¨µêÃû¡°ÖÚÃ÷¹¤×÷ÊÒ¡±£©ÌÔ±¦Á´½Ó: https://shop149406681.taobao.com/?spm=a1z10.1-c.0.0.64cb457fKzgKea 
   3          //ÌÔ±¦µêÄÚËÑË÷¹Ø¼ü´Ê£ºK_A00_001
   4          //  °æ ±¾ ºÅ   : v1.0
   5          //  ×÷    Õß   : ÖÚÃ÷¹¤×÷ÊÒ
   6          //  ½»Á÷Èº :                     1041406448£¨ÆäËü¸ü¶à×ÊÁÏÇë¹Ø×¢¹«¸æ£©
   7          //    CSDN  £¨»ù±¾²ÎÊý£¬×ÊÔ´¸üÐÂÁÐ±í£¬ËùÓÐ½ÓÏßËµÃ÷£©   :µ¥Æ¬»ú´úÂë°áÔË¹¤(ËÑË÷¹Ø¼ü´Ê£ºK_A00_001)
   8          //    BILIBILI£¨ÑÝÊ¾ÊÓÆµ£© :ÖÚÃ÷¹¤×÷ÊÒ(ËÑË÷¹Ø¼ü´Ê£ºK_A00_001)
   9          //  Éú³ÉÈÕÆÚ   : 2021-6-21
  10          //  ×î½üÐÞ¸Ä   : 2021-11-21
  11          //  ¹¦ÄÜÃèÊö   :  0.96 OLEDÄ£¿é²âÊÔ³ÌÐò
  12          //  ²âÊÔÌõ¼þ   : STC89C52RC   ¾§Õñ11.0592
  13          ½ÓÏß
  14          OLED0.96 -----------------------------STC89C52RC
  15          VCC------------------------------------3.3V »ò 5V
  16          GND------------------------------------GND
  17          SCL------------------------------------P1.0
  18          SDA------------------------------------P1.1
  19          RES------------------------------------P1.2   //7Õë¸ÄIICºóÒª½Ó£¬4ÕëIIC²»½Ó
  20          *************************************************************************************/
  21          
  22          
  23          #include "OLED_I2C.h"
*** WARNING C318 IN LINE 25 OF Hardware\OLED_I2C.h: can't open file 'main.h'
*** ERROR C129 IN LINE 59 OF Hardware\OLED_I2C.h: missing ';' before 'Write_IIC_Byte'
  24          #include "codetab.h"
*** WARNING C318 IN LINE 4 OF Hardware\codetab.h: can't open file 'main.h'
  25          #include "delay.h"
  26          
  27          //ÑÓÊ±
  28          void IIC_Delay(void)
  29          {
  30                  uint8_t D_t=1;
  31                  while(D_t--);
  32          }
  33          
  34          //IIC Start
  35          void IIC_Start()
  36          {
  37             OLED_SCL_High;               
  38             OLED_SDA_High;
  39                   IIC_Delay();
  40             OLED_SDA_Low;
  41                   IIC_Delay();
  42             OLED_SCL_Low;
  43          }
  44          
  45          //IIC Stop
  46          void IIC_Stop()
  47          {
  48             OLED_SCL_Low;
  49             OLED_SDA_Low;
  50                   IIC_Delay();
  51                   OLED_SCL_High;         
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 2   

  52             OLED_SDA_High;
  53          }
  54          
  55          //µÈ´ýÐÅºÅÏìÓ¦
  56          uint8_t I2C_WaitAck(void) //²âÊý¾ÝÐÅºÅµÄµçÆ½
  57          {
  58                  uint8_t Ack_Sta;
  59                  OLED_SDA_High;
  60                  IIC_Delay();
  61                  OLED_SCL_High;
  62                  IIC_Delay();
  63                  if(OLED_SDA)
  64                  {
  65                          Ack_Sta = 1;
  66                  }
  67                  else
  68                  {
  69                          Ack_Sta = 0;
  70                  }
  71                  OLED_SCL_Low;
  72                  IIC_Delay();
  73                  return Ack_Sta;
  74          }
  75          
  76          // Í¨¹ýI2C×ÜÏßÐ´Ò»¸ö×Ö½Ú
  77          uint8_t Write_IIC_Byte(uint8_t IIC_Byte)
  78          {
  79                  uint8_t i;
  80                  for(i=0;i<8;i++)
  81                  {
  82                          if(IIC_Byte & 0x80)
  83                          {
  84                                  OLED_SDA_High;
  85                          }
  86                          else
  87                          {
  88                                  OLED_SDA_Low;
  89                          }
  90                          IIC_Delay();
  91                          OLED_SCL_High;
  92                          IIC_Delay();
  93                          OLED_SCL_Low;
  94                          IIC_Byte<<=1;
  95                  }
  96            return I2C_WaitAck();
  97          }
  98          
  99          //OLEDÐ´Êý¾Ý
 100          void WriteDat(uint8_t IIC_Data)
 101          {
 102                  IIC_Start();
 103                  Write_IIC_Byte(0x78);
 104                  Write_IIC_Byte(0x40);                   //write data
 105                  Write_IIC_Byte(IIC_Data);
 106                  IIC_Stop();
 107          }
 108          
 109          //OLEDÐ´ÃüÁî
 110          void WriteCmd(uint8_t IIC_Command)
 111          {
 112                  IIC_Start();
 113                  Write_IIC_Byte(0x78);            //Slave address,SA0=0
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 3   

 114                  Write_IIC_Byte(0x00);                   //write command
 115                  Write_IIC_Byte(IIC_Command);
 116                  IIC_Stop();
 117          }
 118          
 119          
 120          //OLED³õÊ¼»¯  
 121          //OLED_RES_Clr(); OLED_RES_Set();ÕâÁ½ÌõÔÚ7ÕëSPI¸ÄIICºóÐèÒªÓÃÉÏ£¬4ÕëIIC¿É²»ÓÃ
 122          void OLED_Init(void)
 123          {
 124                  OLED_RES_Low;
 125                  DelayMs(200);//³õÊ¼»¯Ö®Ç°µÄÑÓÊ±ºÜÖØÒª£¡
 126                  OLED_RES_High;
 127                  
 128                  
 129                  WriteCmd(0xAE); //¹Ø±ÕÏÔÊ¾
 130                  
 131                  WriteCmd(0x20); //Set Memory Addressing Mode  //ÉèÖÃÄÚ´æË®Æ½Ñ°Ö··½Ê½    
 132                  WriteCmd(0x10); //00,Ë®Æ½µÄÑ°Ö·Ä£Ê½;01,´¹Ö±µÄÑ°Ö·Ä£Ê½;10,Ò³Ñ°Ö· (RESET);11,ÎÞÐ§µÄ
 133                  
 134                  WriteCmd(0xB0); //Set Page Start Address for Page Addressing Mode,0-7  //¡°Ò³ÃæÑ°Ö··½Ê½¡±Ñ¡Ôñ¡°Ò³ÃæÆðÊ¼µØ
             -Ö·¡±
 135                  
 136                  WriteCmd(0xC8); //Set COM Output Scan Direction C0 //Õý³£Ä£Ê½(RESET)É¨Ãè´ÓCOM0µ½COM[N -1] C8 Õý³£Ä£Ê½(RES
             -ET)É¨Ãè´ÓCOM[N -1]µ½COM0
 137                  
 138                  WriteCmd(0x00); //---set low column address//ÉèÖÃÒ³ÃæÑ°Ö·Ä£Ê½µÄÏÂÁÐÆðÊ¼µÍÎ»µØÖ·
 139                  WriteCmd(0x10); //---set high column address//ÉèÖÃÒ³ÃæÑ°Ö·Ä£Ê½µÄÏÂÁÐÆðÊ¼¸ßÎ»Î»µØÖ·
 140                  
 141                  WriteCmd(0x40); //--set start line address //ÉèÖÃÏÔÊ¾RAMÏÔÊ¾ÆðÊ¼ÐÐ¼Ä´æÆ÷
 142                  
 143                  WriteCmd(0x81); //--set contrast control register//ÉèÖÃ¶Ô±È¶È£¬Ò²¾ÍÊÇÁÁ¶È
 144                  WriteCmd(Brightness); //ÁÁ¶Èµ÷½Ú 0x00~0xff
 145                  
 146                  WriteCmd(0xA1); //--set segment re-map 0 to 127 //A0 ÁÐµØÖ·0Ó³Éäµ½SEG0 A1ÁÐµØÖ·127Ó³ÉäÎªSEG0
 147                  
 148                  WriteCmd(0xA6); //--set normal display  //A6 0Ãð1ÁÁ A7 1Ãð0ÁÁ
 149                  
 150                  WriteCmd(0xA8); //--set multiplex ratio(1 to 64) //MUXÅä±ÈÉèÖÃÎªN+1 MUX
 151                  WriteCmd(0x3F); //1/64duty  //ÉèÖÃÒªË¢µÄCOMÊý 16-64ÓÐÐ§
 152                  
 153                  WriteCmd(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content //A4 Êä³öRAMÄÚÈÝ A5 ºöÂ
             -ÔRAMÄÚÈÝ
 154                  
 155                  WriteCmd(0xD3); //-set display offset //ÉèÖÃ´¹Ö±ÒÆ¶¯ÓÉCOM´Ó0d~63dresetºó¸ÃÖµ±»ÖØÖÃÎª00h
 156                  WriteCmd(0x00); //-not offset
 157                  
 158                  WriteCmd(0xD5); //--set display clock divide ratio/oscillator frequency//ÉèÖÃÏÔÊ¾Ê±ÖÓ·ÖÆµ/Õñµ´Æ÷ÆµÂÊ
 159                  WriteCmd(0xF0); //--set divide ratio
 160                  
 161                  WriteCmd(0xD9); //--set pre-charge period//ÉèÖÃpre-chargeÖÜÆÚ
 162                  WriteCmd(0x22); //  ÉèÖÃÖÜÆÚ
 163                  
 164                  WriteCmd(0xDA); //--set com pins hardware configuration  ÉèÖÃCOMÒý½ÅÓ²¼þÅäÖÃ 
 165                  WriteCmd(0x12);  //±¸ÓÃCOMÒý½ÅÅäÖÃ ½ûÓÃCOM×ó/ÓÒÖØÓ³Éä
 166                  
 167                  WriteCmd(0xDB); //--set vcomh //ÉèÖÃVCOMHÈ¡Ïû¹´Ñ¡¡°¼¶±ð¡±
 168                  WriteCmd(0x20); //0x20,0.77xVcc
 169                  
 170                  WriteCmd(0x8D); //--set DC-DC enable//ÉèÖÃÖ±Á÷µçÔ´
 171                  WriteCmd(0x14); //
 172                  
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 4   

 173                  WriteCmd(0xAF); //--turn on oled panel  //´ò¿ªÆÁÄ»ÏÔÊ¾
 174          //      OLED_Fill(0x00); //³õÊ¼ÇåÆÁ
 175          //      OLED_Set_Pos(0,0);
 176          } 
 177          //OLED ÉèÖÃ×ø±ê
 178          void OLED_SetPos(uint8_t x, uint8_t y) //ÉèÖÃÆðÊ¼µã×ø±ê
 179          { 
 180                  WriteCmd(0xb0+y);//¡°Ò³ÃæÑ°Ö··½Ê½¡±Ñ¡Ôñ¡°Ò³ÃæÆðÊ¼µØÖ·¡±
 181                  WriteCmd(((x&0xf0)>>4)|0x10);  //ÉèÖÃÒ³ÃæÑ°Ö·Ä£Ê½µÄÏÂÁÐÆðÊ¼¸ßÎ»µØÖ·
 182                  WriteCmd((x&0x0f)|0x01);   //ÉèÖÃÒ³ÃæÑ°Ö·Ä£Ê½µÄÏÂÁÐÆðÊ¼µÍÎ»µØÖ·
 183          }
 184          
 185          //OLEDÈ«ÆÁ
 186          void OLED_Fill(uint8_t fill_Data)//È«ÆÁÌî³ä
 187          {
 188                  uint8_t m,n;
 189                  for(m=0;m<8;m++)
 190                  {
 191                          WriteCmd(0xb0+m);               //page0-page1
 192                          WriteCmd(0x00);         //low column start address
 193                          WriteCmd(0x10);         //high column start address
 194                          for(n=0;n<X_WIDTH;n++) 
 195                                  {
 196                                          WriteDat(fill_Data);
 197                                          
 198                                  }
 199                  }
 200          }
 201          //OLED¸´Î»
 202          void OLED_CLS(void)//ÇåÆÁ
 203          {
 204                  OLED_Fill(0x00);
 205          }
 206          
 207          //½«OLED´ÓÐÝÃßÖÐ»½ÐÑ
 208          
 209          void OLED_ON(void)
 210          {
 211                  WriteCmd(0X8D);  //ÉèÖÃµçºÉ±Ã
 212                  WriteCmd(0X14);  //¿ªÆôµçºÉ±Ã
 213                  WriteCmd(0XAF);  //OLED»½ÐÑ
 214          }
 215          
 216          //ÈÃOLEDÐÝÃß -- ÐÝÃßÄ£Ê½ÏÂ,OLED¹¦ºÄ²»µ½10uA
 217          void OLED_OFF(void)
 218          {
 219                  WriteCmd(0X8D);  //ÉèÖÃµçºÉ±Ã
 220                  WriteCmd(0X10);  //¹Ø±ÕµçºÉ±Ã
 221                  WriteCmd(0XAE);  //OLEDÐÝÃß
 222          }
 223          
 224          //--------------------------------------------------------------
 225          // º¯Êý      : void OLED_ShowChar(unsigned char x, unsigned char y, unsigned char ch[], unsigned char Text
             -Size)
 226          // ²ÎÊýËµÃ÷     : x,y -- ÆðÊ¼µã×ø±ê(x:0~127, y:0~7); ch[] -- ÒªÏÔÊ¾µÄ×Ö·û´®; TextSize -- ×Ö·û´óÐ¡(1:6*8 ; 
             -2:8*16)
 227          // Description    : ÏÔÊ¾codetab.hÖÐµÄASCII×Ö·û,ÓÐ6*8ºÍ8*16¿ÉÑ¡Ôñ
 228          //--------------------------------------------------------------
 229          
 230          void OLED_ShowStr(uint8_t x, uint8_t y, uint8_t ch[], uint8_t TextSize)
 231          {
 232                  uint8_t c = 0,i = 0,j = 0;
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 5   

 233                  switch(TextSize)
 234                  {
 235                          case 1:
 236                          {
 237                                  while(ch[j] != '\0')
 238                                  {
 239                                          c = ch[j] - 32;
 240                                          if(x > 126)
 241                                          {
 242                                                  x = 0;
 243                                                  y++;
 244                                          }
 245                                          OLED_SetPos(x,y);
 246                                          for(i=0;i<6;i++)
 247                                                  WriteDat(F6x8[c][i]);
 248                                          x += 6;
 249                                          j++;
 250                                  }
 251                          }break;
 252                          case 2:
 253                          {
 254                                  while(ch[j] != '\0')
 255                                  {
 256                                          c = ch[j] - 32;
 257                                          if(x > 120)
 258                                          {
 259                                                  x = 0;
 260                                                  y++;
 261                                          }
 262                                          OLED_SetPos(x,y);
 263                                          for(i=0;i<8;i++)
 264                                                  WriteDat(F8X16[c*16+i]);
 265                                          OLED_SetPos(x,y+1);
 266                                          for(i=0;i<8;i++)
 267                                                  WriteDat(F8X16[c*16+i+8]);
 268                                          x += 8;
 269                                          j++;
 270                                  }
 271                          }break;
 272                  }
 273          }
 274          
 275          //--------------------------------------------------------------
 276          // º¯Êý      : void OLED_ShowCN(unsigned char x, unsigned char y, unsigned char N)
 277          // ²ÎÊýËµÃ÷     : x,y -- ÆðÊ¼µã×ø±ê(x:0~127, y:0~7); N:ºº×ÖÔÚcodetab.hÖÐµÄË÷Òý
 278          // Description    : ÏÔÊ¾codetab.hÖÐµÄºº×Ö,16*16µãÕó
 279          //--------------------------------------------------------------
 280          
 281          void OLED_ShowCN(uint8_t x, uint8_t y, uint8_t N)
 282          {
 283                  uint8_t wm=0;
 284                  uint16_t  adder=32*N;
 285                  OLED_SetPos(x , y);
 286                  for(wm = 0;wm < 16;wm++)
 287                  {
 288                          WriteDat(F16x16[adder]);
 289                          adder += 1;
 290                  }
 291                  OLED_SetPos(x,y + 1);
 292                  for(wm = 0;wm < 16;wm++)
 293                  {
 294                          WriteDat(F16x16[adder]);
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 6   

 295                          adder += 1;
 296                  }
 297          }
 298          
 299          //--------------------------------------------------------------
 300          // º¯Êý      : void OLED_DrawBMP(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsig
             -ned char BMP[]);
 301          // ²ÎÊýËµÃ÷     : x0,y0 -- ÆðÊ¼µã×ø±ê(x0:0~127, y0:0~7); x1,y1 -- Æðµã¶Ô½ÇÏß(½áÊøµã)µÄ×ø±ê(x1:1~128,y1:1~8
             -)
 302          // Description    : ÏÔÊ¾BMPÎ»Í¼
 303          //--------------------------------------------------------------
 304          void OLED_DrawBMP(uint8_t x0,uint8_t y0,uint8_t x1,uint8_t y1,uint8_t BMP[])
 305          {
 306                  uint16_t j=0;
 307                  uint8_t x,y;
 308          
 309            if(y1%8==0)
 310                          y = y1/8;
 311            else
 312                          y = y1/8 + 1;
 313                  for(y=y0;y<y1;y++)
 314                  {
 315                          OLED_SetPos(x0,y);
 316              for(x=x0;x<x1;x++)
 317                          {
 318                                  WriteDat(BMP[j++]);
 319                          }
 320                  }
 321          }
 322          //OLEDÍ¼Æ¬ÇÐ»»ÏÔÊ¾²âÊÔ
 323          void OLED_DrawBMP_Test(void)
 324          {
 325                  
 326                          OLED_Fill(0x00); //ÆÁÈ«Ãð
 327          
 328                          OLED_DrawBMP(0,0,128,8,BMP1);
 329          
 330                          DelayMs(3000);
 331                          OLED_Fill(0x00); //ÆÁÈ«Ãð
 332                          
 333                          OLED_DrawBMP(20,0,101,8,BMP2);  //Í¼Æ¬ÏÔÊ¾(Í¼Æ¬ÏÔÊ¾É÷ÓÃ£¬Éú³ÉµÄ×Ö±í½Ï´ó£¬»áÕ¼ÓÃ½Ï¶à¿Õ¼ä£¬FLASH¿Õ¼ä8KÒÔÏÂ
             -É÷ÓÃ)
 334                          DelayMs(3000);
 335                          
 336                          OLED_Fill(0x00); //ÆÁÈ«Ãð
 337                          
 338                          OLED_DrawBMP(20,0,114,8,BMP3);  //Í¼Æ¬ÏÔÊ¾(Í¼Æ¬ÏÔÊ¾É÷ÓÃ£¬Éú³ÉµÄ×Ö±í½Ï´ó£¬»áÕ¼ÓÃ½Ï¶à¿Õ¼ä£¬FLASH¿Õ¼ä8KÒÔÏÂ
             -É÷ÓÃ)
 339                          DelayMs(3000);
 340          }
 341          
 342          
 343          /**
 344           * ¹¦ÄÜ                     OLEDË®Æ½¹ö¶¯ÏÔÊ¾
 345           * ²ÎÊýËµÃ÷             start_page  : PAGE0~PAGE7
 346           * ²ÎÊýËµÃ÷       end_page  :  PAGE0~PAGE7    (end_page±ØÐë´óÓÚstart_page)
 347           * ²ÎÊýËµÃ÷       frame  : 0~7
 348           * ²ÎÊýËµÃ÷             dir  : 0 ÓÒ¹ö   1 ×ó¹ö
 349           * @retval              ÎÞ
 350           */
 351          void OLED_Scrolling_Display(uint8_t start_page, uint8_t end_page,uint8_t frame,uint8_t dir)
 352          {
C51 COMPILER V9.59.0.0   OLED_I2C                                                          12/29/2023 20:32:58 PAGE 7   

 353              WriteCmd(0x2E);     /* Í£Ö¹¹ö¶¯ µ÷ÓÃºó,RAMÊý¾ÝÐèÒªÖØÐÂÐ´Èë */
 354              
 355              WriteCmd(dir ? 0x26 : 0x27);        /* 0,ÏòÓÒ¹ö¶¯ 1,Ïò×óÒÆ¶¯ */
 356              WriteCmd(0x00);                     /* ·¢ËÍ¿Õ×Ö½Ú ÉèÖÃÎª0x00¼´¿É */
 357              WriteCmd(start_page & 0x07);        /* ÆðÊ¼Ò³µØÖ· */
 358              WriteCmd(frame & 0x07);             /* ÉèÖÃ¹ö¶¯²½³¤Ê±¼ä¼ä¸ô,Ö¡Îªµ¥Î» */
 359              WriteCmd(end_page & 0x07);  /* ÖÕÖ¹Ò³µØÖ· */
 360          
 361              WriteCmd(0x00);   /* ·¢ËÍ¿Õ×Ö½Ú ÉèÖÃÎª0x00¼´¿É */
 362              WriteCmd(0xFF);   /* ·¢ËÍ¿Õ×Ö½Ú ÉèÖÃÎª0xFF¼´¿É */
 363              WriteCmd(0x2F);   /* Æô¶¯¹ö¶¯ ½ûÖ¹¶ÔRAM·ÃÎÊ,¸Ä±äË®Æ½¹ö¶¯ÅäÖÃ */
 364          }
 365          

C51 COMPILATION COMPLETE.  2 WARNING(S),  1 ERROR(S)
